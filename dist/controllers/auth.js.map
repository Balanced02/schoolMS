{"version":3,"sources":["../../server/controllers/auth.js"],"names":["Register","req","res","newUser","body","console","log","username","register","password","err","user","status","json","message","Login","salt","undefined","hash","AuthMe","authenticated","RedirectNoAuth","next","redirect","Logout","logout"],"mappings":";;;;;;;;;AAAA;;;;;;AAEO,IAAMA,8BAAW,SAAXA,QAAW,CAACC,GAAD,EAAMC,GAAN,EAAc;AACpC,MAAIC,UAAU,iCACTF,IAAIG,IADK,EAAd;AAGAC,UAAQC,GAAR,CAAYL,IAAIG,IAAJ,CAASG,QAArB;AACA;AACA,kBAAMC,QAAN,CAAeL,OAAf,EAAwBF,IAAIG,IAAJ,CAASK,QAAjC,EAA2C,UAACC,GAAD,EAAMC,IAAN,EAAe;AACxD,QAAID,GAAJ,EAAS;AACPL,cAAQC,GAAR,CAAYI,GAAZ;AACA,aAAOR,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,iBAASJ,IAAII;AADa,OAArB,CAAP;AAGD;AACD,WAAOZ,IAAIW,IAAJ,CAAS;AACdC,eAAS,yBADK;AAEdH,yBAAWA,IAAX;AAFc,KAAT,CAAP;AAID,GAXD;AAYD,CAlBM;;AAoBA,IAAMI,wBAAQ,SAARA,KAAQ,CAACd,GAAD,EAAMC,GAAN,EAAc;AACjC,MAAIS,OAAOV,IAAIU,IAAf;AACA,SAAOT,IAAIW,IAAJ,CAAS;AACdC,aAAS,kBADK;AAEdH,uBACKV,IAAIU,IADT;AAEEK,YAAMC,SAFR;AAGEC,YAAMD;AAHR;AAFc,GAAT,CAAP;AAQD,CAVM;;AAYP;AACO,IAAME,0BAAS,SAATA,MAAS,CAAClB,GAAD,EAAMC,GAAN,EAAc;AAClC,MAAID,IAAIU,IAAR,EAAc;AACZ,WAAOT,IAAIW,IAAJ,CAAS;AACdO,qBAAe,IADD;AAEdT,YAAMV,IAAIU;AAFI,KAAT,CAAP;AAID;AACD,SAAOT,IAAIW,IAAJ,CAAS;AACdO,mBAAe;AADD,GAAT,CAAP;AAGD,CAVM;;AAYP;AACO,IAAMC,0CAAiB,SAAjBA,cAAiB,CAACpB,GAAD,EAAMC,GAAN,EAAWoB,IAAX,EAAoB;AAChD,MAAI,CAACrB,IAAIU,IAAT,EAAe;AACb,WAAOT,IAAIqB,QAAJ,CAAa,QAAb,CAAP;AACD;AACD,SAAOD,MAAP;AACD,CALM;;AAOA,IAAME,0BAAS,SAATA,MAAS,CAACvB,GAAD,EAAMC,GAAN,EAAc;AAClCD,MAAIwB,MAAJ;AACAvB,MAAIW,IAAJ,CAAS;AACPC,aAAS;AADF,GAAT;AAGD,CALM","file":"auth.js","sourcesContent":["import Admin from '../models/Admin';\n\nexport const Register = (req, res) => {\n  let newUser = new Admin({\n    ...req.body,\n  });\n  console.log(req.body.username);\n  // console.log(req.body.number);\n  Admin.register(newUser, req.body.password, (err, user) => {\n    if (err) {\n      console.log(err);\n      return res.status(400).json({\n        message: err.message,\n      });\n    }\n    return res.json({\n      message: 'Registered Successfully',\n      user: { ...user },\n    });\n  });\n};\n\nexport const Login = (req, res) => {\n  let user = req.user;\n  return res.json({\n    message: 'Login Successful',\n    user: {\n      ...req.user,\n      salt: undefined,\n      hash: undefined,\n    },\n  });\n};\n\n// Get user data from client side\nexport const AuthMe = (req, res) => {\n  if (req.user) {\n    return res.json({\n      authenticated: true,\n      user: req.user,\n    });\n  }\n  return res.json({\n    authenticated: false,\n  });\n};\n\n// Auth Middleware\nexport const RedirectNoAuth = (req, res, next) => {\n  if (!req.user) {\n    return res.redirect('/admin');\n  }\n  return next();\n};\n\nexport const Logout = (req, res) => {\n  req.logout();\n  res.json({\n    message: 'Logout',\n  });\n};\n"]}