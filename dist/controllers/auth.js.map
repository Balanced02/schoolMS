{"version":3,"sources":["../../server/controllers/auth.js"],"names":["Register","req","res","console","log","body","newUser","register","password","err","user","status","json","message","_doc","userType","createUser","sid","then","catch","id","User","Promise","resolve","reject","create","Login","salt","undefined","hash","AuthMe","authenticated","RedirectNoAuth","next","redirect","Logout","logout"],"mappings":"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","file":"auth.js","sourcesContent":["import Users from '../models/Users';\nimport Teacher from '../models/Teacher';\nimport Student from '../models/Student';\nimport Admin from '../models/Admin';\n\nexport const Register = (req, res) => {\n  console.log(req.body);\n  let newUser = new Users({\n    ...req.body,\n  });\n  // console.log(req.body.username);\n  // console.log(req.body.number);\n  Users.register(newUser, req.body.password, (err, user) => {\n    if (err) {\n      console.log(err);\n      return res.status(400).json({\n        message: err.message,\n      });\n    } else {\n      if (user._doc.userType) {\n        // console.log(Object.keys(user));\n        // console.log(user._doc.userType);\n        createUser(user._doc.userType, req.body, user._doc.sid)\n          .then(user => {\n            return res.json({\n              message: 'Registered Successfully',\n              user: { ...user },\n            });\n          })\n          .catch(err => {\n            console.log(err);\n            return res.status(400).json({\n              message: err.message,\n            });\n          });\n      }\n    }\n  });\n};\n\nconst createUser = (userType, body, id) => {\n  let User =\n    userType === 'teacher'\n      ? Teacher\n      : userType === 'student' ? Student : userType === '' ? Admin : Teacher;\n  return new Promise((resolve, reject) => {\n    User.create({ ...body, sid: id })\n      .then(user => {\n        // console.log(User);\n        resolve(user);\n      })\n      .catch(err => {\n        reject(err);\n      });\n  });\n};\n\nexport const Login = (req, res) => {\n  let user = req.user;\n  // console.log(user);\n  return res.json({\n    message: 'Login Successful',\n    user: {\n      ...req.user,\n      salt: undefined,\n      hash: undefined,\n    },\n  });\n};\n\n// Get user data from client side\nexport const AuthMe = (req, res) => {\n  // console.log(req.user);\n  if (req.user) {\n    return res.json({\n      authenticated: true,\n      user: req.user,\n    });\n  }\n  return res.json({\n    authenticated: false,\n  });\n};\n\n// Auth Middleware\nexport const RedirectNoAuth = (req, res, next) => {\n  if (!req.user) {\n    return res.redirect('/whatever');\n  }\n  return next();\n};\n\nexport const Logout = (req, res) => {\n  req.logout();\n  res.json({\n    message: 'Logout',\n  });\n};\n"]}