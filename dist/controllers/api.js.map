{"version":3,"sources":["../../server/controllers/api.js"],"names":["CreateNotice","req","res","body","date","create","schoolId","user","then","json","notice","catch","status","message","error","err","AllCourse","Promise","all","find","sort","count","courses","SummaryData","console","log","accepted","totalStudents","pendingReg","totalStaff","noticeBoard","CreateCourse","courseName","courseCode","minAttendance","description","course","UpdateCourse","_id","findOneAndUpdate","$set","new","VisitorData","newVisitor","visitor","updateVisitor","resolve","reject","data","id","GetVisitors","limit","visitors","GetTeachers","teachers","map","assignedClass","filter","teacher","fullName","d","a","classTitle","join","_doc","classInfo","AllClass","AddClass","UpdateClass","LeaveApplication","sid","teacherId","leave","GetLeave","params","searchQuery","leaves","teacherName","LeaveUpdate","edited","Date","now","NewDepartment","dept","FetchDepartment","CategoryUpdate","GetLeaveCategory","AddUserCategory","GetUserCategory","AddPayHead","GetPayHead","EditSchool","GetSchools","UploadFile","file","send","success","path","createServer","writeHead","end","listen","upload","filename","response","path_display","getImg","readFile","dbx","accessToken","filesUpload","autorename","contents","filesGetTemporaryLink","link"],"mappings":"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","file":"api.js","sourcesContent":["import regeneratorRuntime from 'regenerator-runtime';\n\nimport Dropbox from 'dropbox';\nimport multer from 'multer';\nimport crypto from 'crypto';\nimport fs from 'fs';\nimport http from 'http';\n\nimport Notice from '../models/Notice';\nimport Student from '../models/Student';\nimport Users from '../models/Users';\nimport Course from '../models/Course';\nimport Visitor from '../models/Visitor';\nimport Teacher from '../models/Teacher';\nimport ClassDetails from '../models/ClassDetails';\nimport Leave from '../models/Leave';\nimport Department from '../models/Department';\nimport LeaveCategory from '../models/LeaveCategory';\nimport UserCategory from '../models/UserCategory';\nimport PayHead from '../models/PayHead';\nimport School from '../models/School';\nimport { resolve } from 'url';\n\nexport const CreateNotice = (req, res) => {\n  let { date, body } = req.body;\n  Notice.create({\n    date,\n    body,\n    schoolId: req.user.schoolId,\n  })\n    .then(notice => {\n      res.json(notice);\n    })\n    .catch(err => {\n      res.status(500).json({\n        message: 'Error Loading Clients',\n        error: err.message,\n      });\n    });\n};\n\nexport const AllCourse = async (req, res) => {\n  try {\n    let [courses, count] = await Promise.all([\n      Course.find({\n        schoolId: req.user.schoolId,\n      }).sort('date'),\n      Course.find({\n        schoolId: req.user.schoolId,\n      }).count(),\n    ]);\n    return res.json({\n      courses,\n      count,\n    });\n  } catch (err) {\n    res.status(500).json({\n      message: 'Error fetching courses',\n      error: err.message,\n    });\n  }\n};\n\nexport const SummaryData = async (req, res) => {\n  console.log(req.user);\n  try {\n    let [totalStudents, pendingReg, totalStaff, noticeBoard] = await Promise.all([\n      Student.find({ schoolId: req.user.schoolId }).count(),\n      Student.find({ accepted: true, schoolId: req.user.schoolId }).count(),\n      Users.find({ schoolId: req.user.schoolId }).count(),\n      Notice.find({ schoolId: req.user.schoolId }).sort('-created'),\n    ]);\n    return res.json({\n      totalStudents,\n      pendingReg,\n      totalStaff,\n      noticeBoard,\n    });\n  } catch (err) {\n    res.status(400).json({\n      message: 'Error Loading Clients',\n      error: err.message,\n    });\n  }\n};\n\nexport const CreateCourse = (req, res) => {\n  let { courseName, courseCode, minAttendance, description } = req.body;\n  Course.create({ courseName, courseCode, minAttendance, description, schoolId: req.user.schoolId })\n    .then(course => {\n      res.json(course);\n    })\n    .catch(err => {\n      res.status(500).json({\n        message: 'Error Creating Course',\n        error: err.message,\n      });\n    });\n};\n\nexport const UpdateCourse = (req, res) => {\n  let { _id, courseName, courseCode, minAttendance, description } = req.body;\n  Course.findOneAndUpdate(\n    { _id },\n    {\n      $set: {\n        ...req.body,\n      },\n    },\n    {\n      new: true,\n    }\n  )\n    .then(course => {\n      res.json(course);\n    })\n    .catch(err => {\n      res.status(500).json({\n        message: 'Error Updating Course',\n        error: err.message,\n      });\n    });\n};\n\nexport const VisitorData = (req, res) => {\n  !req.body._id\n    ? newVisitor({ ...req.body, schoolId: req.user.schoolId })\n        .then(visitor => res.json(visitor))\n        .catch(err => {\n          res.status(500).json({\n            message: 'Error Logging Visitor',\n            error: err.message,\n          });\n        })\n    : updateVisitor()\n        .then(visitor => res.json(visitor))\n        .catch(err => {\n          res.status(500).json({\n            message: 'Error Logging Visitor',\n            error: err.message,\n          });\n        });\n};\n\nconst newVisitor = data => {\n  return new Promise((resolve, reject) => {\n    Visitor.create({ ...data })\n      .then(visitor => {\n        resolve(visitor);\n      })\n      .catch(err => {\n        reject(err);\n      });\n  });\n};\n\nconst updateVisitor = data => {\n  let id = data._id;\n  return new Promise((resolve, reject) => {\n    Visitor.findOneAndUpdate(\n      { id: data._id },\n      {\n        $set: {\n          ...data,\n        },\n      },\n      {\n        new: true,\n      }\n    )\n      .then(visitor => resolve(visitor))\n      .catch(err => reject(err));\n  });\n};\n\nexport const GetVisitors = async (req, res) => {\n  try {\n    let [visitors, count] = await Promise.all([\n      Visitor.find({ schoolId: req.user.schoolId })\n        .sort('-timeIn')\n        .limit(50),\n      Visitor.find({ schoolId: req.user.schoolId }).count(),\n    ]);\n    return res.json({\n      visitors,\n      count,\n    });\n  } catch (error) {\n    res.status(500).json({\n      message: 'Error fetching courses',\n      error: err.message,\n    });\n  }\n};\n\nexport const GetTeachers = async (req, res) => {\n  try {\n    let [teachers, count] = await Promise.all([\n      Teacher.find({ schoolId: req.user.schoolId }),\n      Teacher.find({ schoolId: req.user.schoolId }).count(),\n    ]);\n    let data = await ClassDetails.find({ schoolId: req.user.schoolId }, 'teacher classTitle');\n    teachers = teachers.map(teacher => {\n      let assignedClass = data\n        .filter(d => teacher.fullName === d.teacher)\n        .map(a => a.classTitle)\n        .join(', ');\n      teacher._doc.classInfo = assignedClass ? assignedClass : '';\n      return teacher;\n    });\n    res.json({ teachers });\n  } catch (err) {\n    res.status(500).json({\n      message: 'Error Loading Teacher Details',\n      error: err.message,\n    });\n  }\n};\n\nexport const AllClass = (req, res) => {\n  ClassDetails.find({ schoolId: req.user.schoolId })\n    .sort('classTitle')\n    .then(data => {\n      res.json({\n        data,\n      });\n    })\n    .catch(err => {\n      res.status(500).json({\n        message: 'Error fetching class information',\n        error: err.message,\n      });\n    });\n};\n\nexport const AddClass = (req, res) => {\n  ClassDetails.create({ ...req.body, schoolId: req.user.schoolId })\n    .then(classInfo => {\n      res.json(classInfo);\n    })\n    .catch(err => {\n      res.status(500).json({\n        message: 'Error Creating Class',\n        error: err.message,\n      });\n    });\n};\n\nexport const UpdateClass = (req, res) => {\n  let { _id } = req.body;\n  ClassDetails.findOneAndUpdate(\n    { _id },\n    {\n      $set: {\n        ...req.body,\n      },\n    },\n    {\n      new: true,\n    }\n  )\n    .then(classInfo => {\n      res.json(classInfo);\n    })\n    .catch(err => {\n      res.status(500).json({\n        message: 'Error Updating Class',\n        error: err.message,\n      });\n    });\n};\n\nexport const LeaveApplication = (req, res) => {\n  console.log(req.user.sid);\n  Leave.create({ ...req.body, schoolId: req.user.schoolId, teacherId: req.user.sid })\n    .then(leave => {\n      // console.log(leave);\n      res.json(leave);\n    })\n    .catch(err => {\n      console.log(err);\n      res.status(500).json({\n        message: 'Error creating leave',\n        error: err.message,\n      });\n    });\n};\n\nexport const GetLeave = async (req, res) => {\n  let id = req.params.id;\n  console.log(id);\n  let searchQuery = { schoolId: req.user.schoolId };\n  if (id !== 'admin') {\n    searchQuery = {\n      teacherId: id,\n    };\n  }\n  try {\n    let [leaves, count] = await Promise.all([\n      Leave.find(searchQuery).sort('-status'),\n      Leave.find(searchQuery).count(),\n    ]);\n    console.log(leaves);\n    let data = await Teacher.find({ schoolId: req.user.schoolId }, 'sid fullName');\n    leaves = leaves.map(leave => {\n      let teacherName = data.filter(d => leave.teacherId === d.sid)[0];\n      leave._doc.teacherName = teacherName ? teacherName.fullName : '';\n      return leave;\n    });\n    res.json(leaves);\n  } catch (error) {\n    // console.log(error);\n    res.status(500).json({\n      message: 'Error getting leaves',\n      error: error.message,\n    });\n  }\n};\n\nexport const LeaveUpdate = (req, res) => {\n  let { _id } = req.body;\n  let edited = Date.now();\n  Leave.findOneAndUpdate(\n    { _id },\n    {\n      $set: {\n        ...req.body,\n        edited,\n      },\n    },\n    {\n      new: true,\n    }\n  )\n    .then(leave => {\n      res.json(leave);\n    })\n    .catch(err => {\n      // console.log(err);\n      res.status(500).json({\n        message: 'Error Updating Leave',\n        error: err.message,\n      });\n    });\n};\n\nexport const NewDepartment = (req, res) => {\n  let { _id } = req.body;\n  if (_id) {\n    Department.findOneAndUpdate(\n      { _id },\n      {\n        $set: {\n          ...req.body,\n        },\n      },\n      {\n        new: true,\n      }\n    )\n      .then(dept => {\n        res.json(dept);\n      })\n      .catch(err => {\n        // console.log(err);\n        res.status(500).json({\n          message: 'Error updating dept',\n          error: err.message,\n        });\n      });\n  } else {\n    Department.create({\n      ...req.body,\n      schoolId: req.user.schoolId,\n    })\n      .then(dept => {\n        res.json(dept);\n      })\n      .catch(err => {\n        res.status(500).json({\n          message: 'Error Creating Dept',\n          error: err.message,\n        });\n      });\n  }\n};\n\nexport const FetchDepartment = (req, res) => {\n  Department.find({ schoolId: req.user.schoolId })\n    .then(dept => res.json(dept))\n    .catch(err => {\n      res.status(500).json({\n        message: 'Error Fetching Department',\n        error: err.message,\n      });\n    });\n};\n\nexport const CategoryUpdate = (req, res) => {\n  console.log(req.body);\n  let { _id } = req.body;\n  if (_id) {\n    LeaveCategory.findOneAndUpdate(\n      { _id },\n      {\n        $set: {\n          ...req.body,\n        },\n      },\n      {\n        new: true,\n      }\n    )\n      .then(leave => {\n        res.json(leave);\n      })\n      .catch(err => {\n        // console.log(err);\n        res.status(500).json({\n          message: 'Error updating leave',\n          error: err.message,\n        });\n      });\n  } else {\n    LeaveCategory.create({\n      ...req.body,\n      schoolId: req.user.schoolId,\n    })\n      .then(leave => {\n        res.json(leave);\n      })\n      .catch(err => {\n        console.log(err);\n        res.status(500).json({\n          message: 'Error Creating Leave',\n          error: err.message,\n        });\n      });\n  }\n};\n\nexport const GetLeaveCategory = (req, res) => {\n  LeaveCategory.find({ schoolId: req.user.schoolId })\n    .then(leave => res.json(leave))\n    .catch(err => {\n      // console.log(err);\n      res.status(500).json({\n        message: 'Error Fetching Department',\n        error: err.message,\n      });\n    });\n};\n\nexport const AddUserCategory = (req, res) => {\n  // console.log(req.body);\n  let { _id } = req.body;\n  if (_id) {\n    UserCategory.findOneAndUpdate(\n      { _id },\n      {\n        $set: {\n          ...req.body,\n        },\n      },\n      {\n        new: true,\n      }\n    )\n      .then(data => {\n        res.json(data);\n      })\n      .catch(err => {\n        // console.log(err);\n        res.status(500).json({\n          message: 'Error updating leave',\n          error: err.message,\n        });\n      });\n  } else {\n    UserCategory.create({\n      ...req.body,\n      schoolId: req.user.schoolId,\n    })\n      .then(data => {\n        res.json(data);\n      })\n      .catch(err => {\n        // console.log(err);\n        res.status(500).json({\n          message: 'Error Creating Leave',\n          error: err.message,\n        });\n      });\n  }\n};\n\nexport const GetUserCategory = (req, res) => {\n  UserCategory.find({ schoolId: req.user.schoolId })\n    .sort('userType')\n    .then(data => res.json(data))\n    .catch(err => {\n      // console.log(err);\n      res.status(500).json({\n        message: 'Error Fetching Department',\n        error: err.message,\n      });\n    });\n};\n\nexport const AddPayHead = (req, res) => {\n  // console.log(req.body);\n  let { _id } = req.body;\n  if (_id) {\n    PayHead.findOneAndUpdate(\n      { _id },\n      {\n        $set: {\n          ...req.body,\n        },\n      },\n      {\n        new: true,\n      }\n    )\n      .then(data => {\n        res.json(data);\n      })\n      .catch(err => {\n        // console.log(err);\n        res.status(500).json({\n          message: 'Error updating PayHead',\n          error: err.message,\n        });\n      });\n  } else {\n    PayHead.create({\n      ...req.body,\n      schoolId: req.user.schoolId,\n    })\n      .then(data => {\n        res.json(data);\n      })\n      .catch(err => {\n        // console.log(err);\n        res.status(500).json({\n          message: 'Error Creating Pay Head',\n          error: err.message,\n        });\n      });\n  }\n};\n\nexport const GetPayHead = (req, res) => {\n  PayHead.find({ schoolId: req.user.schoolId })\n    .then(data => res.json(data))\n    .catch(err => {\n      // console.log(err);\n      res.status(500).json({\n        message: 'Error Fetching Pay Roll Details',\n        error: err.message,\n      });\n    });\n};\n\nexport const EditSchool = (req, res) => {\n  // console.log(req.body);\n  let { _id } = req.body;\n  if (_id) {\n    School.findOneAndUpdate(\n      { _id },\n      {\n        $set: {\n          ...req.body,\n        },\n      },\n      {\n        new: true,\n      }\n    )\n      .then(data => {\n        res.json(data);\n      })\n      .catch(err => {\n        // console.log(err);\n        res.status(500).json({\n          message: 'Error updating School',\n          error: err.message,\n        });\n      });\n  } else {\n    res.status(500).json({\n      message: 'Error updating School',\n      error: err.message,\n    });\n  }\n};\n\nexport const GetSchools = (req, res) => {\n  School.find({ schoolId: req.user.schoolId })\n    .then(data => res.json(data))\n    .catch(err => {\n      // console.log(err);\n      res.status(500).json({\n        message: 'Error Fetching School Details',\n        error: err.message,\n      });\n    });\n};\n\nexport const UploadFile = async (req, res) => {\n  if (!req.file) {\n    console.log('No file received');\n    return res.send({\n      success: false,\n    });\n  } else {\n    console.log(req.file);\n    return fs.readFile(\n      req.file.path,\n      await function(err, data) {\n        if (err) console.log(err);\n        console.log('reading!!!');\n        http\n          .createServer(function(req, res) {\n            res.writeHead(200, { 'Content-Type': 'image/*' });\n            res.end(data); // Send the file data to the browser.\n          })\n          .listen(8124);\n        upload(data, req.file.filename)\n          .then(response => {\n            console.log(response.path_display);\n            getImg(response.path_display)\n              .then(data => {\n                console.log(data);\n                res.json({ response, data });\n              })\n              .catch(err => {\n                console.log(err);\n                res.status(500).json({\n                  message: 'Error Uploading Logo',\n                  error: err.message,\n                });\n              });\n          })\n          .catch(err => {\n            console.log(err);\n            res.status(500).json({\n              message: 'Error Uploading Logo',\n              error: err.message,\n            });\n          });\n      }\n    );\n  }\n};\n\nconst dbx = new Dropbox({\n  accessToken: 'k8Ho1ZfoarAAAAAAAAAACXwiV_26nZURhcclrTo2j0eR7NqFNDFre1K4Qr-6D5KE',\n});\n\nconst upload = (data, path) => {\n  console.log('Uploading!!!');\n  return new Promise((resolve, reject) => {\n    dbx\n      .filesUpload({ autorename: true, path: '/logos/' + path + '.jpeg', contents: data })\n      .then(response => {\n        resolve(response);\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n};\n\nconst getImg = path => {\n  return new Promise((resolve, reject) => {\n    dbx\n      .filesGetTemporaryLink({ path })\n      .then(response => {\n        // console.log(response.link);\n        resolve(response.link);\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n};\n"]}